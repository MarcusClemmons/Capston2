{"ast":null,"code":"import _objectSpread from \"/home/mark/lastCapstone2/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/mark/lastCapstone2/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/mark/lastCapstone2/Frontend/src/tictacToe/tictacToe.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport ResetButton from \"./ResetButton\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport './tictacToe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TicTacToe() {\n  _s();\n\n  var WIN_CONDITIONS = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      xPlaying = _useState2[0],\n      setXPlaying = _useState2[1];\n\n  var _useState3 = useState(Array(9).fill(null)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      board = _useState4[0],\n      setBoard = _useState4[1];\n\n  var _useState5 = useState({\n    xScore: 0,\n    oScore: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scores = _useState6[0],\n      setScores = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      gameOver = _useState8[0],\n      setGameOver = _useState8[1];\n\n  var handleBoxClick = function handleBoxClick(boxIdx) {\n    // Step 1: Update the board\n    var updatedBoard = board.map(function (value, idx) {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n    setBoard(updatedBoard); // Step 2: Check if either player has won the game\n\n    var winner = checkWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        var oScore = scores.oScore;\n        oScore += 1;\n        setScores(_objectSpread(_objectSpread({}, scores), {}, {\n          oScore: oScore\n        }));\n      } else {\n        var xScore = scores.xScore;\n        xScore += 1;\n        setScores(_objectSpread(_objectSpread({}, scores), {}, {\n          xScore: xScore\n        }));\n      }\n    } // Step 3: Change active player\n\n\n    setXPlaying(!xPlaying);\n  };\n\n  var checkWinner = function checkWinner(board) {\n    for (var i = 0; i < WIN_CONDITIONS.length; i++) {\n      var _WIN_CONDITIONS$i = _slicedToArray(WIN_CONDITIONS[i], 3),\n          x = _WIN_CONDITIONS$i[0],\n          y = _WIN_CONDITIONS$i[1],\n          z = _WIN_CONDITIONS$i[2]; // Iterate through win conditions and check if either player satisfies them\n\n\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  };\n\n  var resetBoard = function resetBoard() {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Get 3 In The A Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n      scores: scores,\n      xPlaying: xPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      onClick: gameOver ? resetBoard : handleBoxClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResetButton, {\n      resetBoard: resetBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TicTacToe, \"rWElEKVYPntsQAjtIoZWIILpIGM=\");\n\n_c = TicTacToe;\nexport default TicTacToe;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","Board","ResetButton","ScoreBoard","TicTacToe","WIN_CONDITIONS","xPlaying","setXPlaying","Array","fill","board","setBoard","xScore","oScore","scores","setScores","gameOver","setGameOver","handleBoxClick","boxIdx","updatedBoard","map","value","idx","winner","checkWinner","i","length","x","y","z","resetBoard"],"sources":["/home/mark/lastCapstone2/Frontend/src/tictacToe/tictacToe.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Board from \"./Board\";\nimport ResetButton from \"./ResetButton\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport './tictacToe.css';\n\nfunction TicTacToe() {\n\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ]\n\n  const [xPlaying, setXPlaying] = useState(true);\n  const [board, setBoard] = useState(Array(9).fill(null))\n  const [scores, setScores] = useState({ xScore: 0, oScore: 0 })\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleBoxClick = (boxIdx) => {\n    // Step 1: Update the board\n    const updatedBoard = board.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    })\n\n    setBoard(updatedBoard);\n\n    // Step 2: Check if either player has won the game\n    const winner = checkWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        let { oScore } = scores;\n        oScore += 1;\n        setScores({ ...scores, oScore })\n      } else {\n        let { xScore } = scores;\n        xScore += 1;\n        setScores({ ...scores, xScore })\n      }\n    }\n\n    // Step 3: Change active player\n    setXPlaying(!xPlaying);\n  }\n\n  const checkWinner = (board) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      // Iterate through win conditions and check if either player satisfies them\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  }\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  }\n\n  return (\n    <div className=\"App\">\n        <h1>Tic Tac Toe</h1>\n        <h3>Get 3 In The A Row</h3>\n\n      <ScoreBoard scores={scores} xPlaying={xPlaying} />\n      <Board board={board} onClick={gameOver ? resetBoard : handleBoxClick} />\n      <ResetButton resetBoard={resetBoard} />\n    </div>\n  );\n}\n\nexport default TicTacToe;"],"mappings":"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"},"metadata":{},"sourceType":"module"}